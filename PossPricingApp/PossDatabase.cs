#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5477
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



public partial class PossPricingDatabase : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertCustomer(Customer instance);
  partial void UpdateCustomer(Customer instance);
  partial void DeleteCustomer(Customer instance);
  partial void InsertMiscCharge(MiscCharge instance);
  partial void UpdateMiscCharge(MiscCharge instance);
  partial void DeleteMiscCharge(MiscCharge instance);
  partial void InsertWorkDay(WorkDay instance);
  partial void UpdateWorkDay(WorkDay instance);
  partial void DeleteWorkDay(WorkDay instance);
  #endregion
	
	public PossPricingDatabase(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public PossPricingDatabase(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public PossPricingDatabase(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public PossPricingDatabase(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<Customer> Customer
	{
		get
		{
			return this.GetTable<Customer>();
		}
	}
	
	public System.Data.Linq.Table<MiscCharge> MiscCharge
	{
		get
		{
			return this.GetTable<MiscCharge>();
		}
	}
	
	public System.Data.Linq.Table<WorkDay> WorkDay
	{
		get
		{
			return this.GetTable<WorkDay>();
		}
	}
}

[Table()]
public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _CustomerID;
	
	private string _Name;
	
	private string _Notes;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerIDChanging(int value);
    partial void OnCustomerIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
	
	public Customer()
	{
		OnCreated();
	}
	
	[Column(Storage="_CustomerID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int CustomerID
	{
		get
		{
			return this._CustomerID;
		}
		set
		{
			if ((this._CustomerID != value))
			{
				this.OnCustomerIDChanging(value);
				this.SendPropertyChanging();
				this._CustomerID = value;
				this.SendPropertyChanged("CustomerID");
				this.OnCustomerIDChanged();
			}
		}
	}
	
	[Column(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[Column(Storage="_Notes", DbType="NVarChar(999)")]
	public string Notes
	{
		get
		{
			return this._Notes;
		}
		set
		{
			if ((this._Notes != value))
			{
				this.OnNotesChanging(value);
				this.SendPropertyChanging();
				this._Notes = value;
				this.SendPropertyChanged("Notes");
				this.OnNotesChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[Table()]
public partial class MiscCharge : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _MiscChargeKey;
	
	private int _CustomerID;
	
	private System.DateTime _Date;
	
	private string _Description;
	
	private double _Amount;
	
	private System.Nullable<System.DateTime> _Printed;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMiscChargeKeyChanging(int value);
    partial void OnMiscChargeKeyChanged();
    partial void OnCustomerIDChanging(int value);
    partial void OnCustomerIDChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnAmountChanging(double value);
    partial void OnAmountChanged();
    partial void OnPrintedChanging(System.Nullable<System.DateTime> value);
    partial void OnPrintedChanged();
    #endregion
	
	public MiscCharge()
	{
		OnCreated();
	}
	
	[Column(Storage="_MiscChargeKey", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int MiscChargeKey
	{
		get
		{
			return this._MiscChargeKey;
		}
		set
		{
			if ((this._MiscChargeKey != value))
			{
				this.OnMiscChargeKeyChanging(value);
				this.SendPropertyChanging();
				this._MiscChargeKey = value;
				this.SendPropertyChanged("MiscChargeKey");
				this.OnMiscChargeKeyChanged();
			}
		}
	}
	
	[Column(Storage="_CustomerID", DbType="Int NOT NULL")]
	public int CustomerID
	{
		get
		{
			return this._CustomerID;
		}
		set
		{
			if ((this._CustomerID != value))
			{
				this.OnCustomerIDChanging(value);
				this.SendPropertyChanging();
				this._CustomerID = value;
				this.SendPropertyChanged("CustomerID");
				this.OnCustomerIDChanged();
			}
		}
	}
	
	[Column(Storage="_Date", DbType="DateTime NOT NULL")]
	public System.DateTime Date
	{
		get
		{
			return this._Date;
		}
		set
		{
			if ((this._Date != value))
			{
				this.OnDateChanging(value);
				this.SendPropertyChanging();
				this._Date = value;
				this.SendPropertyChanged("Date");
				this.OnDateChanged();
			}
		}
	}
	
	[Column(Storage="_Description", DbType="NVarChar(999)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[Column(Storage="_Amount", DbType="Float NOT NULL")]
	public double Amount
	{
		get
		{
			return this._Amount;
		}
		set
		{
			if ((this._Amount != value))
			{
				this.OnAmountChanging(value);
				this.SendPropertyChanging();
				this._Amount = value;
				this.SendPropertyChanged("Amount");
				this.OnAmountChanged();
			}
		}
	}
	
	[Column(Storage="_Printed", DbType="DateTime")]
	public System.Nullable<System.DateTime> Printed
	{
		get
		{
			return this._Printed;
		}
		set
		{
			if ((this._Printed != value))
			{
				this.OnPrintedChanging(value);
				this.SendPropertyChanging();
				this._Printed = value;
				this.SendPropertyChanged("Printed");
				this.OnPrintedChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[Table()]
public partial class WorkDay : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _WorkDayKey;
	
	private System.DateTime _Date;
	
	private int _CustomerID;
	
	private System.Nullable<System.DateTime> _Printed;
	
	private double _PoundsDistillers;
	
	private double _PricePerTonDistillers;
	
	private double _PoundsCorn;
	
	private double _PricePerTonCorn;
	
	private double _PoundsHay;
	
	private double _PricePerTonHay;
	
	private double _PoundsMinerals;
	
	private double _PricePerTonMinerals;
	
	private double _NumberOfHeadYardage;
	
	private double _PricePerHeadYardage;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWorkDayKeyChanging(int value);
    partial void OnWorkDayKeyChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnCustomerIDChanging(int value);
    partial void OnCustomerIDChanged();
    partial void OnPrintedChanging(System.Nullable<System.DateTime> value);
    partial void OnPrintedChanged();
    partial void OnPoundsDistillersChanging(double value);
    partial void OnPoundsDistillersChanged();
    partial void OnPricePerTonDistillersChanging(double value);
    partial void OnPricePerTonDistillersChanged();
    partial void OnPoundsCornChanging(double value);
    partial void OnPoundsCornChanged();
    partial void OnPricePerTonCornChanging(double value);
    partial void OnPricePerTonCornChanged();
    partial void OnPoundsHayChanging(double value);
    partial void OnPoundsHayChanged();
    partial void OnPricePerTonHayChanging(double value);
    partial void OnPricePerTonHayChanged();
    partial void OnPoundsMineralsChanging(double value);
    partial void OnPoundsMineralsChanged();
    partial void OnPricePerTonMineralsChanging(double value);
    partial void OnPricePerTonMineralsChanged();
    partial void OnNumberOfHeadYardageChanging(double value);
    partial void OnNumberOfHeadYardageChanged();
    partial void OnPricePerHeadYardageChanging(double value);
    partial void OnPricePerHeadYardageChanged();
    #endregion
	
	public WorkDay()
	{
		OnCreated();
	}
	
	[Column(Storage="_WorkDayKey", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int WorkDayKey
	{
		get
		{
			return this._WorkDayKey;
		}
		set
		{
			if ((this._WorkDayKey != value))
			{
				this.OnWorkDayKeyChanging(value);
				this.SendPropertyChanging();
				this._WorkDayKey = value;
				this.SendPropertyChanged("WorkDayKey");
				this.OnWorkDayKeyChanged();
			}
		}
	}
	
	[Column(Storage="_Date", DbType="DateTime NOT NULL")]
	public System.DateTime Date
	{
		get
		{
			return this._Date;
		}
		set
		{
			if ((this._Date != value))
			{
				this.OnDateChanging(value);
				this.SendPropertyChanging();
				this._Date = value;
				this.SendPropertyChanged("Date");
				this.OnDateChanged();
			}
		}
	}
	
	[Column(Storage="_CustomerID", DbType="Int NOT NULL")]
	public int CustomerID
	{
		get
		{
			return this._CustomerID;
		}
		set
		{
			if ((this._CustomerID != value))
			{
				this.OnCustomerIDChanging(value);
				this.SendPropertyChanging();
				this._CustomerID = value;
				this.SendPropertyChanged("CustomerID");
				this.OnCustomerIDChanged();
			}
		}
	}
	
	[Column(Storage="_Printed", DbType="DateTime")]
	public System.Nullable<System.DateTime> Printed
	{
		get
		{
			return this._Printed;
		}
		set
		{
			if ((this._Printed != value))
			{
				this.OnPrintedChanging(value);
				this.SendPropertyChanging();
				this._Printed = value;
				this.SendPropertyChanged("Printed");
				this.OnPrintedChanged();
			}
		}
	}
	
	[Column(Storage="_PoundsDistillers", DbType="Float NOT NULL")]
	public double PoundsDistillers
	{
		get
		{
			return this._PoundsDistillers;
		}
		set
		{
			if ((this._PoundsDistillers != value))
			{
				this.OnPoundsDistillersChanging(value);
				this.SendPropertyChanging();
				this._PoundsDistillers = value;
				this.SendPropertyChanged("PoundsDistillers");
				this.OnPoundsDistillersChanged();
			}
		}
	}
	
	[Column(Storage="_PricePerTonDistillers", DbType="Float NOT NULL")]
	public double PricePerTonDistillers
	{
		get
		{
			return this._PricePerTonDistillers;
		}
		set
		{
			if ((this._PricePerTonDistillers != value))
			{
				this.OnPricePerTonDistillersChanging(value);
				this.SendPropertyChanging();
				this._PricePerTonDistillers = value;
				this.SendPropertyChanged("PricePerTonDistillers");
				this.OnPricePerTonDistillersChanged();
			}
		}
	}
	
	[Column(Storage="_PoundsCorn", DbType="Float NOT NULL")]
	public double PoundsCorn
	{
		get
		{
			return this._PoundsCorn;
		}
		set
		{
			if ((this._PoundsCorn != value))
			{
				this.OnPoundsCornChanging(value);
				this.SendPropertyChanging();
				this._PoundsCorn = value;
				this.SendPropertyChanged("PoundsCorn");
				this.OnPoundsCornChanged();
			}
		}
	}
	
	[Column(Storage="_PricePerTonCorn", DbType="Float NOT NULL")]
	public double PricePerTonCorn
	{
		get
		{
			return this._PricePerTonCorn;
		}
		set
		{
			if ((this._PricePerTonCorn != value))
			{
				this.OnPricePerTonCornChanging(value);
				this.SendPropertyChanging();
				this._PricePerTonCorn = value;
				this.SendPropertyChanged("PricePerTonCorn");
				this.OnPricePerTonCornChanged();
			}
		}
	}
	
	[Column(Storage="_PoundsHay", DbType="Float NOT NULL")]
	public double PoundsHay
	{
		get
		{
			return this._PoundsHay;
		}
		set
		{
			if ((this._PoundsHay != value))
			{
				this.OnPoundsHayChanging(value);
				this.SendPropertyChanging();
				this._PoundsHay = value;
				this.SendPropertyChanged("PoundsHay");
				this.OnPoundsHayChanged();
			}
		}
	}
	
	[Column(Storage="_PricePerTonHay", DbType="Float NOT NULL")]
	public double PricePerTonHay
	{
		get
		{
			return this._PricePerTonHay;
		}
		set
		{
			if ((this._PricePerTonHay != value))
			{
				this.OnPricePerTonHayChanging(value);
				this.SendPropertyChanging();
				this._PricePerTonHay = value;
				this.SendPropertyChanged("PricePerTonHay");
				this.OnPricePerTonHayChanged();
			}
		}
	}
	
	[Column(Storage="_PoundsMinerals", DbType="Float NOT NULL")]
	public double PoundsMinerals
	{
		get
		{
			return this._PoundsMinerals;
		}
		set
		{
			if ((this._PoundsMinerals != value))
			{
				this.OnPoundsMineralsChanging(value);
				this.SendPropertyChanging();
				this._PoundsMinerals = value;
				this.SendPropertyChanged("PoundsMinerals");
				this.OnPoundsMineralsChanged();
			}
		}
	}
	
	[Column(Storage="_PricePerTonMinerals", DbType="Float NOT NULL")]
	public double PricePerTonMinerals
	{
		get
		{
			return this._PricePerTonMinerals;
		}
		set
		{
			if ((this._PricePerTonMinerals != value))
			{
				this.OnPricePerTonMineralsChanging(value);
				this.SendPropertyChanging();
				this._PricePerTonMinerals = value;
				this.SendPropertyChanged("PricePerTonMinerals");
				this.OnPricePerTonMineralsChanged();
			}
		}
	}
	
	[Column(Storage="_NumberOfHeadYardage", DbType="Float NOT NULL")]
	public double NumberOfHeadYardage
	{
		get
		{
			return this._NumberOfHeadYardage;
		}
		set
		{
			if ((this._NumberOfHeadYardage != value))
			{
				this.OnNumberOfHeadYardageChanging(value);
				this.SendPropertyChanging();
				this._NumberOfHeadYardage = value;
				this.SendPropertyChanged("NumberOfHeadYardage");
				this.OnNumberOfHeadYardageChanged();
			}
		}
	}
	
	[Column(Storage="_PricePerHeadYardage", DbType="Float NOT NULL")]
	public double PricePerHeadYardage
	{
		get
		{
			return this._PricePerHeadYardage;
		}
		set
		{
			if ((this._PricePerHeadYardage != value))
			{
				this.OnPricePerHeadYardageChanging(value);
				this.SendPropertyChanging();
				this._PricePerHeadYardage = value;
				this.SendPropertyChanged("PricePerHeadYardage");
				this.OnPricePerHeadYardageChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
